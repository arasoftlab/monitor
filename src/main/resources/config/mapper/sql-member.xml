<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd"> 
<mapper namespace="member">
    
    
   	<select id="checkAdminMember" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
	    select id
	    	  ,password
	    	  ,name
	    	  ,phone
	      from adminmember
	     where id=#{id} 
	     AND password=#{password}
	</select>
    
    <select id="checkId" parameterType="seoul.member.MemberVO" resultType="java.lang.Integer">
	    select count(*)
	      from adminmember
	     where id=#{id}
	</select>
	
	<update id="updateMember" parameterType="seoul.member.MemberVO">
	    update member
	       set id=#{id,jdbcType=VARCHAR}
	          ,password=#{password,jdbcType=VARCHAR}
	          ,name=#{name,jdbcType=VARCHAR}
	          ,phone=#{phone,jdbcType=VARCHAR}
	          ,memo=#{memo, jdbcType=VARCHAR}
	     where id=#{id,jdbcType=VARCHAR}
	</update>
    

	<select id="checkMember" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
	    select id
	    	  ,password
	    	  ,name
	    	  ,grade
	    	  ,poll_num
	      from member
	     where id=#{id}
	</select>
	
	<select id="getMember" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
	    select id
	    	  ,password
	    	  ,name
	    	  ,grade
	    	  ,poll_num
	    	  ,phone
	    	  ,sido 
	    	  ,gugun
	    	  ,job
	    	  ,sex
	    	  ,dong
	    	  ,regdate
	    	  ,login_date
  	    	  ,login_date
	          ,secession_date
	          ,secession_disc
	          ,memo
	      from member
	     where 1=1
	        	        
	        <if test="query != null and query !=''">
		   		and ${query} 
			</if>	     
	</select>
	
	<select id="getMemberList" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
     select * from (
	    select id
	    	  ,password
	    	  ,name
       		  ,row_number() over (order by id) rn
	    	  ,grade
	    	  ,poll_num
	    	  ,phone
	      from member
	     where 1=1
	        	        
	        <if test="query != null and query !=''">
		   		and ${query} 
			</if>
   		)
        where rn between #{pagingVO.startRow} and #{pagingVO.nextPageRow}    	     
	</select>
	
	<select id="getMemberCnt" parameterType="seoul.member.MemberVO" resultType="java.lang.Integer">
   		select count(*)
          from member
         where 1=1

		<if test="searchCategory != null and searchCategory != ''">
      	   and ${searchCategory} like '%' || #{searchText} || '%'
		</if>			
			
		<if test="query != null and query !=''">
		   and ${query} 
		</if>
    </select>
    

	
	<update id="updateMemberETC" parameterType="seoul.member.MemberVO">
	    update member
	       set sido=#{sido,jdbcType=VARCHAR}
	       ,gugun=#{gugun,jdbcType=VARCHAR}
	       ,dong=#{dong,jdbcType=VARCHAR}
	       ,job=#{job,jdbcType=VARCHAR}
	       ,sex=#{sex,jdbcType=VARCHAR}
	       ,memo=#{memo, jdbcType=VARCHAR}
	     where id=#{id,jdbcType=VARCHAR}
	</update>
	
	<update id="updateMemberState" parameterType="seoul.member.MemberVO">
		update member
			set login_date = sysdate
		
			<if test="grade != null and grade !=''">
		   	,grade=#{grade , jdbcType=VARCHAR} 
			</if>
			
			<if test="secession_disc != null and secession_disc !=''">
		   	,secession_disc=#{secession_disc , jdbcType=VARCHAR}
		   	,secession_date = sysdate 
		   	,sido=''
		   	,gugun=''
			,dong=''
		   	,job=''
			</if>
			
			where id=#{id,jdbcType=VARCHAR}
	</update>
		
    <delete id="deleteMember" parameterType="seoul.admin.vo.AnswersVO">
        delete
          from member
         where id=#{id}
    </delete>
	
	<insert id="insertMember" parameterType="seoul.member.MemberVO">
		insert into adminmember(
				memberid
				,password
				,name
				,grade
				,phonenumber
			  )
		values(
				#{id ,jdbcType=VARCHAR}
				,#{password ,jdbcType=VARCHAR}
				,#{name ,jdbcType=VARCHAR}
				,#{grade ,jdbcType=VARCHAR}
				,#{phone ,jdbcType=VARCHAR}
			  )
	</insert>
	
	<insert id="insertJoinMember" parameterType="seoul.member.MemberVO">
		insert into member(
				id
				,grade
				,sex
				,job
				,sido
				,gugun
				,dong
				,poll_num
				,memo
				,regdate
		)
		values(
				#{id ,jdbcType=VARCHAR}
				,'apply'
				,#{sex ,jdbcType=VARCHAR}
				,#{job ,jdbcType=VARCHAR}
				,#{sido ,jdbcType=VARCHAR}
				,#{gugun ,jdbcType=VARCHAR}
				,#{dong ,jdbcType=VARCHAR}				
				,#{poll_num , jdbcType=INTEGER}
				,#{memo, jdbcType=VARCHAR}
				,sysdate
		)
	</insert>
	
	<update id="updatejoinMember" parameterType="seoul.member.MemberVO">
	    update member
	       set sex=#{sex,jdbcType=VARCHAR}
				,job=#{job,jdbcType=VARCHAR}
				,sido=#{sido,jdbcType=VARCHAR}
				,gugun=#{gugun,jdbcType=VARCHAR}
				,dong=#{dong,jdbcType=VARCHAR}
				,poll_num=#{poll_num, jdbcType=INTEGER}
				,grade='apply'
				,memo=#{memo, jdbcType=VARCHAR}
	     where id=#{id,jdbcType=VARCHAR}
	</update>
	
	
	
	<!-- 
	예상 매퍼 
	이름이 제각각이니까 잘 체크할것. 
	 -->
	<select id="getBackEndMember" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
		select  
		t.M001_ID id,
		t.M001_NM name,
		t.M001_PHONE phone,
		t.M001_PHONE_GB phone_type,
		t.M001_EMAIL email,
		t.SIDO ,
		t.M001_SSN birthday,
		t.M001_SEX sex,
		t.M001_BIRTH_DT birthday_ymd
		from 
		hisip.vw_mem001_m_monitor@sip2 t
		where t.M001_DEL_YN ='N'
		AND t.M001_ID = #{id}
	        	        
        <if test="query != null and query !=''">
		   		and ${query} 
		</if>	     
	</select>
	
	<!-- 회원부분 -->
	<select id="getMemberManagerlist" parameterType="seoul.admin.vo.MemberManagerVO" resultType="seoul.admin.vo.MemberManagerVO">

			WITH MI AS (
			  SELECT A.ID, A.POLL_NUM, A.GRADE, A.SIDO, A.GUGUN, A.DONG, A.JOB, A.SEX, A.LOGIN_DATE, A.SECESSION_DISC, A.SECESSION_DATE,
			    A.REGDATE, M001_NM NAME, M001_SSN BIRTHDAY, M001_PHONE PHONE, M001_PHONE_GB PHONE_TYPE, M001_EMAIL EMAIL 
			  FROM MEMBER A, HISIP.VW_MEM001_M_MONITOR@SIP2 C
			  WHERE A.ID = C.M001_ID AND A.REGDATE IS NOT NULL
			  
			<choose>
				<when test="grade != null and grade != '' and grade !='secession'">
					AND A.GRADE = #{grade}
				</when>
				<otherwise>
					AND NOT A.GRADE = #{grade}
				</otherwise>
			</choose>
			
			<choose>
				<when test='poll_num != null and poll_num != "0"'>
					AND A.POLL_NUM = #{poll_num}
				</when>
				<when test ='poll_num == null and poll_num == ""'>
					AND A.POLL_NUM = (SELECT POLL_NUM FROM ADMIN_SETTING LIMIT 1)
				</when>
				<when test='poll_num == "0"'>
					AND A.POLL_NUM IS NOT NULL
				</when>
			</choose>

			<choose>
			  <when test='searchCategory != null and searchCategory == "M001_NM" and  searchCategory != ""'>
			  	<if test="searchText != null and searchText !=''">
			  		AND C.M001_NM LIKE '%' || #{searchText} || '%'
			  	</if> 
			
			  </when>
			  <when test='searchCategory != null and searchCategory == "M001_PHONE" and  searchCategory != ""'>
			  	<if test="searchText != null and searchText !=''">
			      	AND C.M001_PHONE LIKE '%' || #{searchText} || '%'
			      </if>
			  </when>
			  <when test='searchCategory != null and searchCategory == "id" and  searchCategory != ""'>
			  	<if test="searchText != null and searchText !=''">
			      	AND A.ID LIKE '%' || #{searchText} || '%'
			      </if>
						</when>
			</choose>
			  
			 
			), ACNT AS (
			  SELECT 
			    N_MONITORS.MEMBER_ID MEMBER_ID, 
			    COUNT(*) AS APPLY_CNT,
			    SUM(CASE IS_SELECTION WHEN 'Y' THEN 1 ELSE 0 END ) AS SELECTION_CNT	    			    
			  FROM N_MONITORS, MI
			  WHERE
			    N_MONITORS.MEMBER_ID = MI.ID
			  GROUP BY N_MONITORS.MEMBER_ID
			), TCNT AS (
			SELECT MI.*, A.APPLY_CNT, A.SELECTION_CNT,
				ROW_NUMBER() OVER (ORDER BY MI.REGDATE DESC) RN,
				ROW_NUMBER() OVER (ORDER BY MI.REGDATE ASC) RND
			FROM 
			  MI, ACNT A
			WHERE
			  MI.ID = A.MEMBER_ID(+) 
		    ), CALC AS (
	          SELECT 
	            COUNT(*) TOT,
	            SUM(CASE SEX WHEN 'W' THEN 1 ELSE 0 END) WCNT,
	            SUM(CASE SEX WHEN 'M' THEN 1 ELSE 0 END) MCNT,
	            SUM(CASE WHEN SEX IS NULL THEN 1 ELSE 0 END) ECNT
	          FROM
	            MI
	          WHERE MI.GRADE = 'normal'
		    )
		    SELECT TCNT.*, C.TOT, C.WCNT, C.MCNT, C.ECNT
		    FROM TCNT, CALC C
		    WHERE RN BETWEEN #{pagingVO.startRow} and #{pagingVO.nextPageRow}
		    
		    		
	</select>


	<select id="getMemberManagerlist_secession" parameterType="seoul.admin.vo.MemberManagerVO" resultType="seoul.admin.vo.MemberManagerVO">

			select e.* 
			from (
			select d.*,
			row_number() over (order by d.secession_date desc) rn,
			row_number() over (order by d.secession_date asc) rnd
			from (select a.id, 
			c.M001_NM name,
			a.poll_num,
			a.grade,
			a.sido,
			a.gugun,
			a.dong,
			a.job,
			a.sex,
			a.login_date,
			a.secession_disc,
			a.secession_date,
			c.M001_SSN birthday,
			c.M001_PHONE phone,
			c.M001_PHONE_GB phone_type,
			c.M001_EMAIL email,
			a.regdate,
			b.apply_cnt, 
			b.selection_cnt--,
			from member a,(select c.member_id, COUNT(*) as apply_cnt
			, count(case C.is_selection when 'Y' then 1 end) as selection_cnt
			FROM n_monitors C, member a
			where C.member_id = a.id 
			group by c.member_id)b, hisip.vw_mem001_m_monitor@sip2 c
			where b.MEMBER_ID(+) = a.id
			AND c.M001_id(+) = a.id
			AND a.regdate IS NOT NULL 
			
		  	<if test="grade != null and grade != ''">
	      	   and a.grade = #{grade}
			</if>	
	
			<if test="poll_num != null and poll_num != ''">
	      	   and a.poll_num = #{poll_num}
			</if>

			  <choose>
			    <when test='searchCategory != null and searchCategory == "M001_NM" and  searchCategory != ""'>
					and c.M001_NM like '%' || #{searchText} || '%'
			    </when>
			    <when test='searchCategory != null and searchCategory == "M001_PHONE" and  searchCategory != ""'>
			       and c.M001_PHONE like '%' || #{searchText} || '%'
			    </when>
			    <when test='searchCategory != null and searchCategory == "id" and  searchCategory != ""'>
			       and a.id like '%' || #{searchText} || '%'
     			</when>
			   </choose>
			      
			order by a.poll_num DESC , a.grade ASC , a.secession_date DESC)d 
		)e
    	where rn  between #{pagingVO.startRow} and #{pagingVO.nextPageRow}
		  		
   		
	</select>





	<select id="getMemberManagerCnt" parameterType="seoul.admin.vo.MemberManagerVO" resultType="java.lang.Integer">	
        select count(*)
          from member
         where 1=1
		
			<choose>
				<when test="grade != null and grade != '' and grade !='secession'">
					AND GRADE = #{grade}
				</when>
				<otherwise>
					AND NOT GRADE = #{grade}
				</otherwise>
			</choose>
			
			<choose>
				<when test='poll_num != null and poll_num != "0"'>
					AND POLL_NUM = #{poll_num}
				</when>
				<when test ='poll_num == null and poll_num == ""'>
					AND POLL_NUM = (SELECT POLL_NUM FROM ADMIN_SETTING LIMIT 1)
				</when>
				<when test='poll_num == "0"'>
					AND POLL_NUM IS NOT NULL
				</when>
			</choose>

			<choose>
			  <when test='searchCategory != null and searchCategory == "id" and  searchCategory != ""'>
			  	<if test="searchText != null and searchText !=''">
			      	AND ID LIKE '%' || #{searchText} || '%'
			      </if>
			  </when>
			</choose>
	
			  			   
	</select>
	
    <select id="getMemberManagerPlaceCnt" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
	select  
	CASE
	WHEN c.SIDO is null THEN '기타'
	WHEN c.SIDO ='서울' THEN '서울'
	WHEN c.SIDO ='경기' THEN '경기'
	WHEN c.SIDO ='인천' THEN '인천'
	END SIDO
	,
	count(*) sido_cnt
	from member a , hisip.vw_mem001_m_monitor@sip2 c
	where a.id = c.M001_ID
	and c.M001_DEL_YN ='N'
	and Not a.grade ='admin'
	GROUP BY c.SIDO
					   
	</select>
	
    <select id="getMemberAct" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
    	WITH BASEID AS (
    		SELECT DISTINCT SUBJECT_ID
    		FROM (
    			SELECT DISTINCT SUBJECT_ID
    			FROM N_MONITORS
    			WHERE IS_SELECTION ='Y' 
    			<if test='subject_id != null and subject_id !=""'>
    			AND SUBJECT_ID  <![CDATA[< ]]> #{subject_id} 
    			</if>
    			
    			AND MEMBER_ID = #{id}
    			<choose>
    				<when test='poll_num != null and poll_num != "" and poll_num != "TOT"'>
    					AND POLL_NUM = #{poll_num}		
    				</when>
    				<when test='poll_num == null or poll_num == ""'>
    					AND POLL_NUM = (SELECT POLL_NUM FROM ADMIN_SETTING WHERE ROWNUM =1)	
    				</when>
    				<otherwise>
    					
    				</otherwise>
    			</choose>
    			
    			ORDER BY SUBJECT_ID DESC
    		)
    		<if test='subject_id != null and subject_id !=""'>
    		WHERE ROWNUM  <![CDATA[< ]]> 4
    		</if>
    	)
		select 
			<if test='subject_id != null and subject_id !=""'>
				#{subject_id} SUBJECT_ID,
			</if>
			(select count(*) from n_monitors where member_id=#{id} 
			
				<choose>
    				<when test='poll_num != null and poll_num != "" and poll_num != "TOT"'>
    					AND POLL_NUM = #{poll_num}		
    				</when>
    				<when test='poll_num == null or poll_num == ""'>
    					AND POLL_NUM = (SELECT POLL_NUM FROM ADMIN_SETTING WHERE ROWNUM =1)	
    				</when>
    				<otherwise>
    					
    				</otherwise>
    			</choose>
				
			)apply_cnt
			,(select count(*) from n_monitors where member_id=#{id} 
				<choose>
    				<when test='poll_num != null and poll_num != "" and poll_num != "TOT"'>
    					AND POLL_NUM = #{poll_num}		
    				</when>
    				<when test='poll_num == null or poll_num == ""'>
    					AND POLL_NUM = (SELECT POLL_NUM FROM ADMIN_SETTING WHERE ROWNUM =1)	
    				</when>
    				<otherwise>
    					
    				</otherwise>
    			</choose> 
				AND IS_SELECTION ='Y'
			)selected_cnt
			,(SELECT COUNT(*) FROM BASEID) - (select count(*) from n_answers N, BASEID B  where N.member_id=#{id} AND temporary='N' 
				<choose>
    				<when test='poll_num != null and poll_num != "" and poll_num != "TOT"'>
    					AND POLL_NUM = #{poll_num}		
    				</when>
    				<when test='poll_num == null or poll_num == ""'>
    					AND POLL_NUM = (SELECT POLL_NUM FROM ADMIN_SETTING WHERE ROWNUM =1)	
    				</when>
    				<otherwise>
    					
    				</otherwise>
    			</choose>
				AND N.SUBJECT_ID = B.SUBJECT_ID 
			
			)tmp_sum1		
	    from member
	    where id=#{id}
	</select>
	
	<select id="getM001_secession" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
		select 
		id
		from member ,hisip.vw_mem001_m_monitor@sip2
		where
		grade != 'secession'
		AND M001_ID = id 
		AND M001_DEL_YN ='Y'
	</select>
</mapper>