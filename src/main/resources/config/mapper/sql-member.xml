<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd"> 
<mapper namespace="member">
    
    
   	<select id="checkAdminMember" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
	    select id
	    	  ,password
	    	  ,name
	    	  ,phone
	      from adminmember
	     where id=#{id} 
	     AND password=#{password}
	</select>
    
    <select id="checkId" parameterType="seoul.member.MemberVO" resultType="java.lang.Integer">
	    select count(*)
	      from adminmember
	     where id=#{id}
	</select>
	
	<update id="updateMember" parameterType="seoul.member.MemberVO">
	    update member
	       set id=#{id,jdbcType=VARCHAR}
	          ,password=#{password,jdbcType=VARCHAR}
	          ,name=#{name,jdbcType=VARCHAR}
	          ,phone=#{phone,jdbcType=VARCHAR}
	     where id=#{id,jdbcType=VARCHAR}
	</update>
    
    
    
    
	<select id="checkMember" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
	    select id
	    	  ,password
	    	  ,name
	    	  ,grade
	    	  ,poll_num
	      from member
	     where id=#{id}
	</select>
	
	<select id="getMember" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
	    select id
	    	  ,password
	    	  ,name
	    	  ,grade
	    	  ,poll_num
	    	  ,phone
	    	  ,sido 
	    	  ,gugun
	    	  ,job
	    	  ,sex
	    	  ,dong
	    	  ,regdate
	    	  ,login_date
  	    	  ,login_date
	          ,secession_date
	          ,secession_disc
	      from member
	     where 1=1
	        	        
	        <if test="query != null and query !=''">
		   		and ${query} 
			</if>	     
	</select>
	
	<select id="getMemberList" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
     select * from (
	    select id
	    	  ,password
	    	  ,name
       		  ,row_number() over (order by id) rn
	    	  ,grade
	    	  ,poll_num
	    	  ,phone
	      from member
	     where 1=1
	        	        
	        <if test="query != null and query !=''">
		   		and ${query} 
			</if>
   		)
        where rn between #{pagingVO.startRow} and #{pagingVO.nextPageRow}    	     
	</select>
	
	<select id="getMemberCnt" parameterType="seoul.member.MemberVO" resultType="java.lang.Integer">
   		select count(*)
          from member
         where 1=1

		<if test="searchCategory != null and searchCategory != ''">
      	   and ${searchCategory} like '%' || #{searchText} || '%'
		</if>			
			
		<if test="query != null and query !=''">
		   and ${query} 
		</if>
    </select>
    

	
	<update id="updateMemberETC" parameterType="seoul.member.MemberVO">
	    update member
	       set sido=#{sido,jdbcType=VARCHAR}
	       ,gugun=#{gugun,jdbcType=VARCHAR}
	       ,dong=#{dong,jdbcType=VARCHAR}
	       ,job=#{job,jdbcType=VARCHAR}
	       ,sex=#{sex,jdbcType=VARCHAR}
	     where id=#{id,jdbcType=VARCHAR}
	</update>
	
	<update id="updateMemberState" parameterType="seoul.member.MemberVO">
		update member
			set login_date = sysdate
		
			<if test="grade != null and grade !=''">
		   	,grade=#{grade , jdbcType=VARCHAR} 
			</if>
			
			<if test="secession_disc != null and secession_disc !=''">
		   	,secession_disc=#{secession_disc , jdbcType=VARCHAR}
		   	,secession_date = sysdate 
		   	,sido=''
		   	,gugun=''
			,dong=''
		   	,job=''
			</if>
			
			where id=#{id,jdbcType=VARCHAR}
	</update>
		
    <delete id="deleteMember" parameterType="seoul.admin.vo.AnswersVO">
        delete
          from member
         where id=#{id}
    </delete>
	
	<insert id="insertMember" parameterType="seoul.member.MemberVO">
		insert into adminmember(
				memberid
				,password
				,name
				,grade
				,phonenumber)
		values(
				#{id ,jdbcType=VARCHAR}
				,#{password ,jdbcType=VARCHAR}
				,#{name ,jdbcType=VARCHAR}
				,#{grade ,jdbcType=VARCHAR}
				,#{phone ,jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertJoinMember" parameterType="seoul.member.MemberVO">
		insert into member(
				id
				,grade
				,sex
				,job
				,sido
				,gugun
				,dong
				,poll_num
				,regdate
		)
		values(
				#{id ,jdbcType=VARCHAR}
				,'apply'
				,#{sex ,jdbcType=VARCHAR}
				,#{job ,jdbcType=VARCHAR}
				,#{sido ,jdbcType=VARCHAR}
				,#{gugun ,jdbcType=VARCHAR}
				,#{dong ,jdbcType=VARCHAR}				
				,#{poll_num , jdbcType=INTEGER}
				,sysdate
		)
	</insert>
	
	<update id="updatejoinMember" parameterType="seoul.member.MemberVO">
	    update member
	       set sex=#{sex,jdbcType=VARCHAR}
				,job=#{job,jdbcType=VARCHAR}
				,sido=#{sido,jdbcType=VARCHAR}
				,gugun=#{gugun,jdbcType=VARCHAR}
				,dong=#{dong,jdbcType=VARCHAR}
				,poll_num=#{poll_num, jdbcType=INTEGER}
				,grade='apply'
	     where id=#{id,jdbcType=VARCHAR}
	</update>
	
	
	
	<!-- 
	예상 매퍼 
	이름이 제각각이니까 잘 체크할것. 
	 -->
	<select id="getBackEndMember" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
		select  
		t.M001_ID id,
		t.M001_NM name,
		t.M001_PHONE phone,
		t.M001_PHONE_GB phone_type,
		t.M001_EMAIL email,
		t.SIDO ,
		t.M001_SSN birthday,
		t.M001_SEX sex,
		t.M001_BIRTH_DT birthday_ymd
		from 
		hisip.vw_mem001_m_monitor@sip2 t
		where t.M001_DEL_YN ='N'
		AND t.M001_ID = #{id}
	        	        
        <if test="query != null and query !=''">
		   		and ${query} 
		</if>	     
	</select>
	
	
	<select id="getMemberManagerlist" parameterType="seoul.admin.vo.MemberManagerVO" resultType="seoul.admin.vo.MemberManagerVO">

			select e.* 
			from (
			select d.*,
			row_number() over (order by d.regdate desc) rn,
			row_number() over (order by d.regdate asc) rnd
			from (select a.id, 
			c.M001_NM name,
			a.poll_num,
			a.grade,
			a.sido,
			a.gugun,
			a.dong,
			a.job,
			a.sex,
			a.login_date,
			a.secession_disc,
			a.secession_date,
			c.M001_SSN birthday,
			c.M001_PHONE phone,
			c.M001_PHONE_GB phone_type,
			c.M001_EMAIL email,
			a.regdate,
			b.apply_cnt, 
			b.selection_cnt--,
			from member a,(select c.member_id, COUNT(*) as apply_cnt
			, count(case C.is_selection when 'Y' then 1 end) as selection_cnt
			FROM n_monitors C, member a
			where C.member_id = a.id 
			group by c.member_id)b, hisip.vw_mem001_m_monitor@sip2 c
			where b.MEMBER_ID(+) = a.id
			AND c.M001_id(+) = a.id
			AND a.regdate IS NOT NULL 
			
		  	<if test="grade != null and grade != ''">
	      	   and a.grade = #{grade}
			</if>	
	
			<if test="poll_num != null and poll_num != ''">
	      	   and a.poll_num = #{poll_num}
			</if>

			  <choose>
			    <when test='searchCategory != null and searchCategory == "M001_NM" and  searchCategory != ""'>
					and c.M001_NM like '%' || #{searchText} || '%'
			    </when>
			    <when test='searchCategory != null and searchCategory == "M001_PHONE" and  searchCategory != ""'>
			       and c.M001_PHONE like '%' || #{searchText} || '%'
			    </when>
			    <when test='searchCategory != null and searchCategory == "id" and  searchCategory != ""'>
			       and a.id like '%' || #{searchText} || '%'
     			</when>
			   </choose>
			
			<if test="query != null and query !=''">
		   		and NOT a.${query} 
			</if>		

      
			order by a.poll_num DESC , a.grade ASC , a.regdate DESC)d 
		)e
    	where rn  between #{pagingVO.startRow} and #{pagingVO.nextPageRow}
		  		
   		
	</select>






	<select id="getMemberManagerlist_secession" parameterType="seoul.admin.vo.MemberManagerVO" resultType="seoul.admin.vo.MemberManagerVO">

			select e.* 
			from (
			select d.*,
			row_number() over (order by d.secession_date desc) rn,
			row_number() over (order by d.secession_date asc) rnd
			from (select a.id, 
			c.M001_NM name,
			a.poll_num,
			a.grade,
			a.sido,
			a.gugun,
			a.dong,
			a.job,
			a.sex,
			a.login_date,
			a.secession_disc,
			a.secession_date,
			c.M001_SSN birthday,
			c.M001_PHONE phone,
			c.M001_PHONE_GB phone_type,
			c.M001_EMAIL email,
			a.regdate,
			b.apply_cnt, 
			b.selection_cnt--,
			from member a,(select c.member_id, COUNT(*) as apply_cnt
			, count(case C.is_selection when 'Y' then 1 end) as selection_cnt
			FROM n_monitors C, member a
			where C.member_id = a.id 
			group by c.member_id)b, hisip.vw_mem001_m_monitor@sip2 c
			where b.MEMBER_ID(+) = a.id
			AND c.M001_id(+) = a.id
			AND a.regdate IS NOT NULL 
			
		  	<if test="grade != null and grade != ''">
	      	   and a.grade = #{grade}
			</if>	
	
			<if test="poll_num != null and poll_num != ''">
	      	   and a.poll_num = #{poll_num}
			</if>

			  <choose>
			    <when test='searchCategory != null and searchCategory == "M001_NM" and  searchCategory != ""'>
					and c.M001_NM like '%' || #{searchText} || '%'
			    </when>
			    <when test='searchCategory != null and searchCategory == "M001_PHONE" and  searchCategory != ""'>
			       and c.M001_PHONE like '%' || #{searchText} || '%'
			    </when>
			    <when test='searchCategory != null and searchCategory == "id" and  searchCategory != ""'>
			       and a.id like '%' || #{searchText} || '%'
     			</when>
			   </choose>
			      
			order by a.poll_num DESC , a.grade ASC , a.secession_date DESC)d 
		)e
    	where rn  between #{pagingVO.startRow} and #{pagingVO.nextPageRow}
		  		
   		
	</select>





	<select id="getMemberManagerCnt" parameterType="seoul.admin.vo.MemberManagerVO" resultType="java.lang.Integer">	
        select count(*)
          from member
         where 1=1
		
			<if test='searchCategory != null and searchCategory == "id" and  searchCategory != ""'>
		       and id like '%' || #{searchText} || '%'
     		</if>			
			<if test="grade != null and grade != ''">
	      	   and grade = #{grade}
			</if>	
	
			<if test="poll_num != null and poll_num != ''">
	      	   and poll_num = #{poll_num}
			</if>
	
			  			   
	</select>
	
    <select id="getMemberManagerPlaceCnt" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
	select  
	CASE
	WHEN c.SIDO is null THEN '기타'
	WHEN c.SIDO ='서울' THEN '서울'
	WHEN c.SIDO ='경기' THEN '경기'
	WHEN c.SIDO ='인천' THEN '인천'
	END SIDO
	,
	count(*) sido_cnt
	from member a , hisip.vw_mem001_m_monitor@sip2 c
	where a.id = c.M001_ID
	and c.M001_DEL_YN ='N'
	and Not a.grade ='admin'
	GROUP BY c.SIDO
					   
	</select>
	
    <select id="getMemberAct" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
    	WITH BASEID AS (
    		SELECT DISTINCT SUBJECT_ID
    		FROM (
    			SELECT DISTINCT SUBJECT_ID
    			FROM N_MONITORS
    			WHERE IS_SELECTION ='Y' AND SUBJECT_ID  <![CDATA[< ]]> #{subject_id} AND MEMBER_ID = #{id}
    				AND POLL_NUM = #{poll_num}
    			ORDER BY SUBJECT_ID DESC
    		)
    		WHERE ROWNUM  <![CDATA[< ]]> 4
    	)
		select 
			 (select count(*) from n_monitors where member_id=#{id} AND poll_num=#{poll_num})apply_cnt
			,(select count(*) from n_monitors where member_id=#{id} AND poll_num=#{poll_num} AND IS_SELECTION ='Y')selected_cnt
			,(SELECT COUNT(*) FROM BASEID) - (select count(*) from n_answers N, BASEID B  where N.member_id=#{id} AND temporary='N' AND poll_num=#{poll_num}
				AND N.SUBJECT_ID = B.SUBJECT_ID 
			
			)tmp_sum1		
	    from member
	    where id=#{id}
	</select>
	
	<select id="getM001_secession" parameterType="seoul.member.MemberVO" resultType="seoul.member.MemberVO">
		select 
		id
		from member ,hisip.vw_mem001_m_monitor@sip2
		where
		grade != 'secession'
		AND M001_ID = id 
		AND M001_DEL_YN ='Y'
	</select>
</mapper>