<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd"> 
<mapper namespace="monitors">
    
    <insert id="insertMonitors"  parameterType="seoul.admin.vo.MonitorsVO">
        insert into n_monitors(
        				  idx
          				 ,member_id
          				 ,description
        				 ,subject_id
        				 ,team_num
        				 ,poll_num
        				 ,regdate)
        		   values(
        		   		 N_MONITORS_SEQ.NEXTVAL
        		   		 ,#{member_id ,jdbcType=VARCHAR}
        		   		 ,#{description ,jdbcType=VARCHAR }
        		   		 ,#{subject_id ,jdbcType=VARCHAR}
        		   		 ,#{team_num , jdbcType=INTEGER}
        		   		 ,#{poll_num , jdbcType=INTEGER}
        		   		 ,sysdate)
    </insert>
    
    <select id="getMonitors" parameterType="seoul.admin.vo.MonitorsVO" resultType="seoul.admin.vo.MonitorsVO">
		    select idx
				 ,member_id
				 ,subject_id
				 ,description
				 ,team_num
	    		 ,regdate
	    		 ,is_selection
	          from n_monitors
	         where subject_id = #{subject_id}

	         	<if test="member_id != null and member_id !=''">
	         		and member_id = #{member_id}
	         	</if>

	         	<if test="query != null and query !=''">
			   		and ${query} 
				</if>
     
    </select>
    
    <select id="getMonitorsApplyList" parameterType="seoul.admin.vo.MonitorsVO" resultType="seoul.admin.vo.MonitorsVO">
        
						WITH BASEQ AS ( -- 기수
							SELECT POLL_NUM FROM ADMIN_SETTING WHERE ROWNUM =1
						), BASEID AS ( -- 직전3회
			                SELECT SUBJECT_ID , MEMBER_ID
	                		FROM
	                		(
	                			SELECT DISTINCT SUBJECT_ID, MEMBER_ID
	                			FROM N_MONITORS, BASEQ Q
	                			WHERE  IS_SELECTION = 'Y' AND SUBJECT_ID <![CDATA[< ]]> #{subject_id}  
	                			AND N_MONITORS.POLL_NUM = Q.POLL_NUM   
	                			ORDER BY SUBJECT_ID DESC
	                		) 
	                		WHERE  ROWNUM <![CDATA[< ]]> 4
			            ), TOT AS( --토탈정보 선정횟수 미선정횟수
			            	SELECT 
			            	SUM(CASE WHEN IS_SELECTION='Y' THEN 1 ELSE 0 END) SP, --선정 
			            	SUM(CASE WHEN IS_SELECTION='N' THEN 1 ELSE 0 END) AP, MEMBER_ID --미선정
			        		FROM N_MONITORS N, BASEQ Q
			        		WHERE N.POLL_NUM = Q.POLL_NUM
			        		GROUP BY MEMBER_ID
			            ), MEMINFO AS ( 
					    	SELECT M.ID MEMBER_ID,  H.M001_NM MEMBER_NAME, H.M001_SSN BIRTH, H.M001_PHONE PHONE, H.M001_EMAIL EMAIL, 
		                	M.SIDO, M.GUGUN, M.DONG, M.JOB, M.REGDATE, M.MEMO
					    	FROM HISIP.VW_MEM001_M_MONITOR@SIP2 H, MEMBER M, BASEQ Q
					    	WHERE M.ID = H.M001_ID AND M.POLL_NUM = Q.POLL_NUM
					    ), TMPSUM AS( 
			               SELECT A.MEMBER_ID, A.TEMPORARY
			               FROM N_ANSWERS A, BASEID B
			               WHERE A.SUBJECT_ID IN ( B.SUBJECT_ID) AND A.MEMBER_ID = B.MEMBER_ID
			               AND A.TEMPORARY ='N'
		              )
		              SELECT 
		                A.MEMBER_ID, A.MEMBER_NAME, A.BIRTH, A.PHONE, A.SIDO, A.GUGUN, A.DONG, A.JOB, A.EMAIL, A.MEMO,
		                B.IDX, B.SUBJECT_ID, B.DESCRIPTION, B.TEAM_NUM, B.POLL_NUM, B.IS_SELECTION, B.REGDATE,                 
		                ROW_NUMBER() OVER(ORDER BY A.REGDATE ASC) RN1, 
		                ROW_NUMBER() OVER(ORDER BY A.REGDATE DESC) RND,
		                NVL((SELECT AP + SP FROM TOT WHERE MEMBER_ID = A.MEMBER_ID), 0) APPLY_CNT,
		                NVL((SELECT SP FROM TOT WHERE MEMBER_ID = A.MEMBER_ID), 0) SELECTED_CNT,
		                NVL((SELECT COUNT(*) FROM BASEID B WHERE B.MEMBER_ID = A.MEMBER_ID) - (SELECT COUNT(*) FROM TMPSUM WHERE MEMBER_ID = A.MEMBER_ID ), 0) TMP_SUM1
		                
		              FROM  (SELECT * FROM MEMINFO) A, N_MONITORS B
		              WHERE A.MEMBER_ID = B.MEMBER_ID
		              AND B.SUBJECT_ID = #{subject_id}
              
		              <if test="searchCategory != null and searchCategory != ''">
			      	   AND A.${searchCategory} LIKE '%' || #{searchText} || '%'
		  					</if>			
						
		    			<if test="team_num != null and team_num != ''">
			      	   AND B.TEAM_NUM = #{team_num}
				    	</if>
				    	<if test="is_selection != null and is_selection != ''">
			      	   AND B.IS_SELECTION = #{is_selection}
					  </if>
					  					  
					  ORDER BY B.REGDATE ASC
                
    </select>
    
    <select id="getMonitorsList" parameterType="seoul.admin.vo.MonitorsVO" resultType="seoul.admin.vo.MonitorsVO">
       select * from (
	        select idx
				 ,member_id
				 ,subject_id
	       		 ,row_number() over (order by ${ord}) rn
				 ,description
				 ,team_num
				 ,is_selection
	    		 ,regdate
	          from n_monitors
	         where subject_id = #{subject_id}
   		)
        where rn between #{pagingVO.startRow} and #{pagingVO.nextPageRow}    
    </select>
    
    <delete id="deleteMonitors" parameterType="seoul.admin.vo.MonitorsVO">
        delete
          from n_monitors
         where idx=#{idx}
    </delete>

    <update id="updateMonitors" parameterType="seoul.admin.vo.MonitorsVO">
        update n_monitors
           set 
           team_num=#{team_num,jdbcType=INTEGER}
           ,description=#{description,jdbcType=VARCHAR}
         where idx=#{idx}
    </update>

    <update id="updateMonitorsApply" parameterType="seoul.admin.vo.MonitorsVO">
        update n_monitors
           set 
           is_selection=#{is_selection,jdbcType=VARCHAR}
          where idx=#{idx}
    </update>
    
    
    <select id="getMonitorsCnt" parameterType="seoul.admin.vo.MonitorsVO" resultType="java.lang.Integer">
        select count(*)
          from n_monitors
         where 1=1
			and subject_id = #{subject_id}

		<if test="searchCategory != null and searchCategory != ''">
      	   and ${searchCategory} like '%' || #{searchText} || '%'
		</if>			
			
		<if test="team_num != null and team_num != ''">
      	   and team_num = #{team_num}
		</if>
		<if test="is_selection != null and is_selection != ''">
      	   and is_selection = #{is_selection}
		</if>

		<if test="query != null and query !=''">
		   and ${query} 
		</if>
    </select>
 
    <select id="getMonitorsFileList" parameterType="file.vo.FileMappingVO" resultType="file.vo.FileVO">
        select answers_id
              ,subject_id
              ,questions
              ,answers
              ,member_id
              ,temporary
          from n_answers
         where 
    </select>
    
    <select id="getMonitorsMember" parameterType="seoul.admin.vo.MonitorsMemberVO" resultType="seoul.admin.vo.MonitorsMemberVO">

	select a.*, to_char(rn1) rn        
		from (
       select m.poll_num 
        ,s.title
        ,s.submit_s_date
        ,s.submit_e_date
        ,s.question_cnt
			,(select COUNT(subject_id) from n_answers a where m.subject_id = a.subject_id AND a.MEMBER_ID=#{member_id} AND a.temporary ='N' )apply_cnt
        ,s.pay_sum 
        ,s.pay_date
        ,row_number() over (order by s.regdate asc) rn1
        ,row_number() over (order by s.regdate desc) rnd
        from 
        N_monitors m,
        n_subject s
        where 
		m.member_id = #{member_id} AND m.IS_SELECTION = 'Y' AND s.subject_id = m.subject_id AND s.pay_YN = 'Y'
      )a
      where rnd between #{pagingVO.startRow} and #{pagingVO.nextPageRow}
      order by rn1 desc

	</select>    
	
    <select id="getMonitorsAnE_list" parameterType="seoul.admin.vo.MonitorsMemberVO" resultType="seoul.admin.vo.MonitorsMemberVO">
	
		select a.*, to_char(rn1) rn        
		from (
       select m.poll_num 
       	,s.subject_id
        ,s.title
        ,s.question_cnt
	    ,(select COUNT(subject_id) from n_answers a where m.subject_id = a.subject_id AND a.MEMBER_ID=#{member_id} AND a.temporary ='N' )apply_cnt
        ,m.IS_SELECTION
        ,row_number() over (order by s.regdate asc) rn1
        ,row_number() over (order by s.regdate desc) rnd
        from 
        N_monitors m,
        n_subject s
        where 
		m.member_id =#{member_id} AND s.subject_id = m.subject_id 
      )a
      where rnd between #{pagingVO.startRow} and #{pagingVO.nextPageRow}
      order by rn1 desc

	</select>    
    
    <select id="getMonitorsMemberCnt" parameterType="seoul.admin.vo.MonitorsMemberVO" resultType="java.lang.Integer">
			select count(*)
			from 
			N_monitors m,
			n_subject s
			where 
			m.member_id = #{member_id} AND m.IS_SELECTION = 'Y' AND s.subject_id = m.subject_id AND s.pay_YN = 'Y'
		<if test="searchCategory != null and searchCategory != ''">
      	   and ${searchCategory} like '%' || #{searchText} || '%'
		</if>			
			
		<if test="query != null and query !=''">
		   and ${query} 
		</if>
    </select>
    
    
    
</mapper>
